# Chapter 6 実践Webアプリケーション
  ## スーパーグローバル関数
    $_GET URLパラメータから値を取得
    $_POST　HTTPメソッドのボディ部にデータを乗せて渡される連想配列
    $_FILES　ファイルのアップロードが行われた際にファイルの情報が格納される。
    $_COOKIE　ブラウザ側に情報を保持し、状態管理を行うためのもの
    $_REQUEST($_GET, $_POST, $_COOKIEが格納されており、同じキーで値が保存されている場合は、上書きされる。
              順番は変動するが、初期状態では、GET, POST, _COOKIEの順に読み込まれる、)
    $_SERVER　WEBサーバーの情報やプログラム実行時の環境情報などを持つ。
    $_ENV 環境変数が格納されている
    $_SESSION　セッションの値が格納されている。（セッションIDのやりとりにはクッキーを使うのが基本）

  ## HTTPメソッド
  GET, POST, PUT, DELETE　この基本の４種の使い分け。
  最初は、GET、　POSTの使い分け。
  GETは、何度アクセスしてもそれだけではurl先のリソースを変化させることはないもの。
  何度同じアクセスをしても、同じ結果が返ってくる。
  POSTは、内容が変わる可能性がある。書き換えたり、削除したり。
  PUTは、確か内容が変わらない？（URL構造によりけり？）うろ覚え。
  DELETEは、返ってくる結果が毎回同じ、消せるものがあれば消し、なければない状態が返ってくるため。

  ## DB接続
  DBに接続する方法は大きく二種類。
  １つは、PDO
  https://qiita.com/7968/items/6f089fec8dde676abb5b
  もう１つは、mysqli_query(mysql_queryは非推奨、というかphp7ではなくなった。)
  このうちPDOを使うのが便利。
  $dbh = new PDO('DSN','ユーザー名','パスワード',オプション（配列); // dbh dataBaseHandler、DSN DataSourceName
  PDOインスタンスを作成し、引数に接続先DB情報を渡す。
  例:mysqlの場合
  $dbh = new PDO('mysql:host=サーバー名;dbname=データベース名;charset=文字エンコード','ユーザー名','パスワード',オプション);
  $dbh->setAttribute(変更したい属性 , 値); // インスタンス化後にオプションを追加する方法。

  オプション
  ・ PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION // エラー発生時に例外を投げてくれるようになる。

  ## バリデーション
  入力された値が正しいかチェックする。
  ①値が入力されているかをissetでチェック
  ②（必要なら）入力されている値が、入力条件を満たしているかをチェック（例えば、数値か、0か１か、みたいな感じ）

  ## HTTPヘッダ
  header関数を使えば、HTTPレスポンスヘッダーに情報を追加することができる。
  Locationヘッダ（絶対パスの必要があるそうです）とURIを指定するとなんとリダイレクトまでできてしまうのだ！！以外と簡単リダイレクト！！！！

  ## ロジックとビューの分離
  作業を一人でする場合でも、そして複数でする場合ならなおさらどこにどんなファイルがあるのか、
  どんな機能をもつファイルがあるのか、が一目でわかるほうがよい。
  ロジック、ビューを分離することは、どのディレクトリに何があるか明白になる第一歩。